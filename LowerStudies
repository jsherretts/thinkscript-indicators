





AroonShortTermTrend Detector

declare lower;


plot Data = AroonIndicator("length" = 5)."Up" is greater than 70 and AroonIndicator("length" = 14)."Up" is greater than 70 and AroonIndicator()."Up" is greater than 70 and AroonIndicator("length" = 55)."Up" is greater than 70;


squeeze with sma

declare lower;
input price = CLOSE;
input length = 20;
input nK = 1.5;
input nBB = 2.0;
input alertLine = 1.0;
input maLengthOne = 20;
input maTypeOne = AverageType.EXPONENTIAL;
plot sqzHistogram = TTM_Squeeze(price, length, nK, nBB, alertLine).Histogram;
sqzHistogram.AssignValueColor(if sqzHistogram < 0 then if sqzHistogram > sqzHistogram[1] then Color.YELLOW else Color.RED else
if sqzHistogram > sqzHistogram[1] then Color.CYAN else Color.BLUE);
sqzHistogram.SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
sqzHistogram.SetLineWeight(3);
def sqzAlert = TTM_Squeeze(price, length, nK, nBB, alertLine).SqueezeAlert;
plot volComp = TTM_Squeeze(price, length, nK, nBB, alertLine).VolComp;
volComp.AssignValueColor(if sqzAlert then Color.GREEN else Color.RED);
volComp.SetPaintingStrategy(PaintingStrategy.POINTS);
volComp.SetLineWeight(3);
plot histogramAverage = MovingAverage(maTypeOne, sqzHistogram, maLengthOne);






#coppock curve


declare lower;

input RateOfChangeSlowPeriod = 14;
input RateOfChangeFastPeriod = 11;
input WeightedMAPeriod = 10;

def AggregationPeriod = if (getAggregationPeriod() < AggregationPeriod.WEEK) then AggregationPeriod.WEEK else getAggregationPeriod();

def price = close(period = AggregationPeriod);

def ROC1 = if price[RateOfChangeSlowPeriod]!=0 then (price/price[RateOfChangeSlowPeriod]-1)*100 else 0;
def ROC2 = if price[RateOfChangeFastPeriod]!=0 then (price/price[RateOfChangeFastPeriod]-1)*100 else 0;

plot Coppock = WMA(ROC1 + ROC2, WeightedMAPeriod);

Coppock.assignValueColor(if Coppock>Coppock[1] then color.green else color.red);
Coppock.SetDefaultColor(GetColor(1));
Coppock.setLineWeight(2);
Coppock.HideBubble();

plot ZeroLine = 0;

ZeroLine.SetDefaultColor(color.white);
ZeroLine.HideBubble();


plot buy = Coppock[1] < 0 and Coppock > Coppock[1] and Coppock[1] < Coppock[2];
 
AddChartBubble(Coppock[1] < 0 and Coppock > Coppock[1] and Coppock[1] < Coppock[2], Coppock, "Buy", Color.CYAN, no);


#ROCKBOTTOM 


declare lower;

input length = 25;
Assert(length > 0, "'length' must be positive: " + length);
def Up = (length - 1 - GetMaxValueOffset(high, length)) * 100.0 / (length - 1);
def Down = (length - 1 - GetMinValueOffset(low, length)) * 100.0 / (length - 1);
# scan for up line crossing above down line
#plot scan = Up[1] < Down[1] and Up > Down;
# scan for down line crossing above up line
#plot scan = Down[1] < Up[1] and Down > Up;
plot scan = Down [1]>= 100 ;

#SUPER3
declare lower;

plot Data = AwesomeOscillator()."AO" is greater than 0 and ElliotOscillator()."ElliotOsc" is greater than 0 and  TrendQuality()."TQ" is greater than 0;



# AWESOME OSSY WITH LABELS

input showTrend = yes;
input showUnderlying = yes;

#wizard input: trendCheck

declare lower;
declare zerobase;

plot AO = Average(hl2, 5) - Average(hl2, 34);
plot Zero = 0;

AO.SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
AO.SetLineWeight(3);
AO.DefineColor("Up", Color.UPTICK);
AO.DefineColor("Down", Color.DOWNTICK);
AO.AssignValueColor(if AO > AO[1] then AO.color("Up") else if AO < AO[1] then AO.color("Down") else GetColor(1));
Zero.SetDefaultColor(GetColor(5));
 def Downtrend  =  AO < AO[1];
def Uptrend =   AO > AO[1];


AddLabel(showTrend, if Downtrend then " Downtrend " else if Uptrend then " Uptrend " else " Sideways ", if Downtrend then Color.DOWNTICK else if Uptrend then Color.UPTICK else Color.GRAY);

#END trendCheck

#Underlying_Equity_Price

AddLabel(showUnderlying, " " + GetUnderlyingSymbol() + ":  " + close(GetUnderlyingSymbol()) + " ", if Downtrend then Color.RED else if Uptrend then Color.GREEN else Color.GRAY);

 plot signal =  Uptrend ;
  AssignBackgroundColor(if signal then Color.LIGHT_GREEN else Color.DARK_RED);
